import logo from "./logo.svg";
import "./App.css";
import "bootstrap/dist/css/bootstrap.min.css";
import axios from 'axios';

import {
  Container,
  InputGroup,
  FormControl,
  Button,
  Row,
  Card,
} from "react-bootstrap";
import { useState, useEffect } from "react";

const CLIENT_ID = "03df3b9ad5094f7ba2904002d7c94924";
const CLIENT_SECRET = "00460120cfbb4f79bc69823a886d5208";
const REDIRECT_URI = "http://localhost:3000/";
const AUTH_ENDPOINT = "https://accounts.spotify.com/authorize";
var scopes = ['user-top-read', 'user-read-recently-played'];
const RESPONSE_TYPE = "token";

function App() {
  const [searchInput, setSearchInput] = useState("");
  const [accessToken, setAccessToken] = useState("");
  const [albums, setAlbums] = useState([]);
  const [artists, setArtists] = useState([])

  useEffect(() => {
    const hash = window.location.hash;
    let token = window.localStorage.getItem("token");

    if (!token && hash) {
      token = hash.substring(1).split("&").find(elem => elem.startsWith("access_token")).split("=")[1];

      window.location.hash = "";
      window.localStorage.setItem("token", token);
    }
    setAccessToken(token);
    // Api access token
    var authParameters = {
      method: "POST",
      headers: {
        'Authorization': 'Basic ' + btoa(CLIENT_ID + ':' + CLIENT_SECRET),
        "Content-Type": "application/x-www-form-urlencoded",
      },
      body:
        "grant_type=client_credentials&client_id" +
        CLIENT_ID +
        "&client_secret=" +
        CLIENT_SECRET,
        
    }

    fetch('https://accounts.spotify.com/api/token', authParameters)
      .then(result => result.json())
      .then(data => setAccessToken(data.access_token))
  }, []);

  // Search
  async function search() {
    console.log("Search for " + searchInput)

    // Get request using search to get the Artist ID
    var searchParameters = {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ' + accessToken
      }
    }
    var artistID = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=artist', searchParameters)
      .then(response => response.json())
      .then(data => { return data.artists.items[0].id })

      console.log('artist id is ' + artistID)
    // Get request with Artist ID grab all the albums from that artist
    var returnedAlbums = await fetch('https://api.spotify.com/v1/artists/' + artistID + '/albums' + '?include_groups=album&market=US&limit=50', searchParameters)
      .then(response => response.json())
      .then(data => {
        console.log(data);
        setAlbums(data.items)
      });
    // Display those albums to the user
  }

  //Get a song recommendation
  async function recSong() {
    let searchParameters = {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ' + accessToken
      }
    }

    let userTopItems = await fetch('https://api.spotify.com/v1/me/following?type=artist', searchParameters)
      .then(response => response.json())
      .then(data => { return data })
    
    console.log(userTopItems)
  }



  const searchArtists = async (e) => {
    e.preventDefault()
    const {data} = await axios.get("https://api.spotify.com/v1/search", {
        headers: {
            Authorization: `Bearer ${accessToken}`
        },
        params: {
          q: searchInput,
          type: "artist"
        }
    })

    setArtists(data)
    console.log(data)
}

  return (
    <div className="App">
      <Container>
        <InputGroup className="mb-3 " size="lg">
          <FormControl className="shadow p-3 mb-5 bg-white"
            placeholder="Search For Artist"
            type="input"
            onKeyPress={(event) => {
              if (event.key == "Enter") {
                search();
              }
            }}
            onChange={(event) => setSearchInput(event.target.value)}
          />
          <Button variant="primary" className="shadow p-3 mb-5"
            onClick={search}
          >
            Search
          </Button>
        </InputGroup>
      </Container>
      <Container>
        <Row className="mx-2 row row-cols-4">
          {albums.map( (album, i) => {
            return (
              <Card border="" className="p-1 add-space shadow p-3 mb-5 bg-white rounded">
              <Card.Img src={album.images[0].url} />
              <Card.Body>
                <Card.Title>{album.name}</Card.Title>
              </Card.Body>
            </Card>
            )
          })}
        </Row>
      </Container>
        <a href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${scopes.join("%20")}&response_type=${RESPONSE_TYPE}`}>Login to Spotify</a>
      <div className="rec__button">
        <Button variant="success" size="lg" className="shadow p-2 mb-5" onClick={recSong}>
          Recommend me a song
        </Button>


      </div>
    </div>
  );
}


export default App;
